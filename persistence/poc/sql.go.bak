
import (
	"net/http"
	"time"

	"github.com/gobuffalo/uuid"
)

type CredentialsType string

type LoginRequest struct {
	ID uuid.UUID `json:"id" db:"id"`
	ExpiresAt time.Time `json:"expires_at" faker:"time_type"`
	CreatedAt time.Time `json:"issued_at" faker:"time_type" db:"created_at"`
	UpdatedAt time.Time `json:"updated_at" faker:"time_type" db:"updated_at"`
	RequestURL string `json:"request_url" db:"request_url"`
	Active CredentialsType `json:"active,omitempty" db:"active"`
	Methods map[CredentialsType]*RequestMethod `json:"methods" faker:"login_request_methods"`
	RequestHeaders http.Header `json:"-" faker:"http_header" db:"http_headers"`
}

type RequestMethod struct {
	// Method contains the request credentials type.
	Method CredentialsType `json:"method" db:"method"`

	// Config is the credential type's config.
	Config RequestMethodConfig `json:"config" db:"config"`
}

type RequestMethodConfig interface {
	String()
}

type DefaultRequestMethod struct {
	Foo string `json:"foo" db:"foo"`
}

func (m *DefaultRequestMethod) String() {}

